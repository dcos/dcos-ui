& when (@message-enabled) {

  .message {

    .message-icon {

      .element-spacing(message-icon, null, null);
      .property-variant(message-icon, height, null, null);
      .property-variant(message-icon, width, null, null);
      cursor: pointer;
      display: block;
      float: left;

      .icon {
        vertical-align: top;
      }

      + .message-content {
        .element-spacing(message-content, null, null);
      }
    }

    .message-content {

      // Remove top margin from the first child so we're not reliant on flush-top
      > :first-child {
        margin-top: 0;
      }

      // Remove bottom margin from the last child so we're not reliant on flush-bottom
      > :last-child {
        margin-bottom: 0;
      }
    }

    /* Message Type Style */

    .message-type-style {
      color: inherit;

      a,
      p,
      ul,
      li,
      h1,
      h2,
      h3,
      h4,
      h5 {
        color: inherit;
      }

      li {

        &:before {
          .property-variant(message, background-color, color, null, null);
        }
      }
    }
  }
}

& when (@layout-screen-small-enabled) {

  @media (min-width: @layout-screen-small-min-width) {

    & when (@message-enabled) and (@message-screen-small-enabled) {
      /* Message */

      .message {

        .message-icon {
          .element-spacing(message-icon, null, screen-small);
          .property-variant(message-icon, height, null, screen-small);
          .property-variant(message-icon, width, null, screen-small);

          + .message-content {
            .element-spacing(message-content, null, screen-small);
          }
        }
      }
    }
  }
}

& when (@layout-screen-medium-enabled) {

  @media (min-width: @layout-screen-medium-min-width) {

    & when (@message-enabled) and (@message-screen-medium-enabled) {
      /* Message */

      .message {

        .message-icon {
          .element-spacing(message-icon, null, screen-medium);
          .property-variant(message-icon, height, null, screen-medium);
          .property-variant(message-icon, width, null, screen-medium);

          + .message-content {
            .element-spacing(message-content, null, screen-medium);
          }
        }
      }
    }
  }
}

& when (@layout-screen-large-enabled) {

  @media (min-width: @layout-screen-large-min-width) {

    & when (@message-enabled) and (@message-screen-large-enabled) {
      /* Message */

      .message {

        .message-icon {
          .element-spacing(message-icon, null, screen-large);
          .property-variant(message-icon, height, null, screen-large);
          .property-variant(message-icon, width, null, screen-large);

          + .message-content {
            .element-spacing(message-content, null, screen-large);
          }
        }
      }
    }
  }
}

& when (@layout-screen-jumbo-enabled) {

  @media (min-width: @layout-screen-jumbo-min-width) {

    & when (@message-enabled) and (@message-screen-jumbo-enabled) {
      /* Message */

      .message {

        .message-icon {
          .element-spacing(message-icon, null, screen-jumbo);
          .property-variant(message-icon, height, null, screen-jumbo);
          .property-variant(message-icon, width, null, screen-jumbo);

          + .message-content {
            .element-spacing(message-content, null, screen-jumbo);
          }
        }
      }
    }
  }
}
