const DefaultErrorMessages = [

  //
  // The following rule will match every message path, behaving
  // like the default sink if a path is not found.
  //
  // Remember to concat these error messages when you are composing
  // your own at a higher level. For example:
  //
  // const PathCustomizations = [
  //  {
  //    path: /^id$/,
  //    type: 'PROP_MISSING',
  //    message: 'Please specify an ID'
  //  }
  //  'id': {
  //    PROP_MISSING: 'Please specify an ID'
  //   },
  //  'container.[^.]+.id': {
  //    PROP_MISSING: 'Please specify an ID for this container'
  //   }
  // ].concat(DefaultErrorMessages);
  //

  // The following error constants are used by the RAML Validator Loader

  {
    path: /.*/,
    type: 'ENUM',
    message: 'Must be one of {values}'
  },
  {
    path: /.*/,
    type: 'ITEMS_MAX',
    message: 'Must contain at most {value} items in the array'
  },
  {
    path: /.*/,
    type: 'ITEMS_MIN',
    message: 'Must contain at least {value} items in the array'
  },
  {
    path: /.*/,
    type: 'LENGTH_MAX',
    message: 'Must be at most {value} characters long'
  },
  {
    path: /.*/,
    type: 'LENGTH_MIN',
    message: 'Must be at least {value} characters long'
  },
  {
    path: /.*/,
    type: 'NUMBER_MAX',
    message: 'Must be smaller than or equal to {value}'
  },
  {
    path: /.*/,
    type: 'NUMBER_MIN',
    message: 'Must be bigger than or equal to {value}'
  },
  {
    path: /.*/,
    type: 'NUMBER_TYPE',
    message: 'Must be of type `{value}`'
  },
  {
    path: /.*/,
    type: 'PROP_MISSING',
    message: 'Missing property'
  },
  {
    path: /.*/,
    type: 'PROP_MISSING_MATCH',
    message: 'Missing a property that matches `{name}`'
  },
  {
    path: /.*/,
    type: 'STRING_PATTERN',
    message: 'Must match the pattern "{pattern}"'
  },
  {
    path: /.*/,
    type: 'TYPE_NOT_ARRAY',
    message: 'Expecting an array'
  },
  {
    path: /.*/,
    type: 'TYPE_NOT_BOOLEAN',
    message: 'Expecting a boolean value'
  },
  {
    path: /.*/,
    type: 'TYPE_NOT_DATETIME',
    message: 'Expecting a date/time string'
  },
  {
    path: /.*/,
    type: 'TYPE_NOT_INTEGER',
    message: 'Expecting an integer number'
  },
  {
    path: /.*/,
    type: 'TYPE_NOT_NUMBER',
    message: 'Expecting a number'
  },
  {
    path: /.*/,
    type: 'TYPE_NOT_OBJECT',
    message: 'Expecting an object'
  },
  {
    path: /.*/,
    type: 'TYPE_NOT_STRING',
    message: 'Expecting a string'
  },

  // The following error constants are generated by parsing the
  // marathon error messages

  {
    path: /.*/,
    type: 'ALREADY_EXISTS',
    message: 'Already Exists'
  }

];

module.exports = DefaultErrorMessages;
