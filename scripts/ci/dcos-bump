#!/usr/bin/env bash

# README
#
# DC/OS UI bump helper script - its bash, its ugly, but it works ¯\_(ツ)_/¯
# Feel free to do it manually ʘ‿ʘ
#
# Usage
# You need to provide a Github Personal Access Token[1] and call the script like this
# GH_USER=you GH_TOKEN=123445 ./bump.sh <master|1.12|1.11>
#
# [1]
# Github Personal Access Token: https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/
# Token needs full repo permission (nothing else)

set -e

target=${1:-master}

if [ -z "$GH_USER" ] || [ -z "$GH_TOKEN" ]; then
  echo "I need a GH_USER and GH_TOKEN to be set."
  exit 1
fi

if [ "$1" == "--help" ] || [ "$1" == "-h" ]; then
    echo "Usage Example: GH_TOKEN=123445 ./bump.sh master"
    exit 0
fi

if [ "$1" == "--version" ]; then
    echo "bump v0.0.1"
    exit 0
fi


function ghcurl() {
  curl -s -H "Content-Type: application/json" -H "Authorization: token ${GH_TOKEN}" "$@"
}

function dgit() {
  git -C ./dcos "$@"
}


printf "\n\n=== Cloning DCOS ====================================================================\n"
[ ! -d ./tmp ] && mkdir ./tmp
[ ! -d ./tmp/dcos ] && git -C ./tmp clone https://${GH_USER}:${GH_TOKEN}@github.com/mesosphere/dcos.git

# this also is a safety measure to not mess with you local git repo accidentally. imagine you `git checkout .` (without the `-C ./dcos`) while hacking this script... :blush:
cd ./tmp



printf "\n\n=== Processing current buildinfo.json (OSS) =================================================\n"
dgit checkout ${target} && dgit reset head && dgit checkout . && dgit pull origin
current_tag=$(jq .single_source.url ./dcos/packages/dcos-ui/buildinfo.json | grep -oE "v[0-9]{1,}\.[0-9]{1,}\.[0-9]{1,}")
latest_version=$(ghcurl https://api.github.com/repos/dcos/dcos-ui/releases/latest | jq -r ".tag_name")



printf "\n\n=== Check if bump necessary =================================================================\n"
echo "currently bundled version: $current_tag"
echo "latest dcos-ui version: $latest_version"
if [ "$current_tag" == "$latest_version" ] ; then
    echo "No bump necessary."
    exit 0
fi



printf "\n\n=== Check for open Bump PRs =================================================================\n"
existing_bump_pr=$(ghcurl "https://api.github.com/search/issues?q=repo%3Adcos%2Fdcos+is%3Apr+is%3Aopen+%22%5B${target}%5D+Automated+Bump+DC%2FOS+UI%22+-label%3A%22ship+it%22+author%3A${GH_USER}" | jq .items[0].number)
if [ $existing_bump_pr != "null" ]; then
  echo "Bump PR already open: https://github.com/dcos/dcos/pull/${existing_bump_pr}"
fi



printf "\n\n=== Get JIRAs from git log ==================================================================\n"
jira_ids="$(git -C .. --no-pager log ${current_tag}...${latest_version} | grep -oE "(COPS|D2IQ|Marathon|DCOS(_OSS)?)-[0-9]{1,6}" || echo "")"

#
# "* [$JIRA_ID](https://jira.d2iq.com/browse/$JIRA_ID)"


printf "\n\n=== Prepare OSS bump branch =================================================================\n"
bump_branch="dcos-ui/bump/$(date +%F-%H-%M-%S)/${latest_version}"
dgit checkout ${target}
dgit checkout -b ${bump_branch}
curl -L $(curl -s https://api.github.com/repos/dcos/dcos-ui/releases/latest | jq -r '.assets[] | select ( .name == "buildinfo.json" ) | .browser_download_url ') > ./dcos/packages/dcos-ui/buildinfo.json
sed -i "s;* Updated DC.OS UI to.*;* Updated DC/OS UI to [${latest_version}](https://github.com/dcos/dcos-ui/releases/tag/${latest_version}).;" ./dcos/CHANGES.md
dgit add packages/dcos-ui/buildinfo.json CHANGES.md
echo "make sure the commit in ./tmp/dcos looks alright and hit enter afterwards."
read
dgit commit -m "chore: Bump DC/OS UI ${latest_version}"
dgit push origin $bump_branch



printf "\n\n=== Create OSS bump PR ======================================================================\n"
bump_pr_body=$(echo "$jira_ids" | sed 's/\(.*\)/\* [\1](https:\/\/jira.d2iq.com\/browse\/\1)\\n/g')

echo "{
  \"title\": \"[${target}] Automated Bump DC/OS UI ${latest_version}\",
  \"body\": \"${bump_pr_body}\",
  \"head\": \"mesosphere:${bump_branch}\",
  \"base\": \"${target}\",
  \"maintainer_can_modify\": true
}
" > ./pr.json
ghcurl -X POST --data @./pr.json "https://api.github.com/repos/dcos/dcos/pulls" > ./pr-response.json
bump_pr="$(jq .number ./pr-response.json)"



printf "\n\n=== Close old PRs ======================================================================\n"
if [ "$existing_bump_pr" != "null" ]; then
    ghcurl -X POST --data "{\"body\": \"Superseded by #${bump_pr}\"}" "https://api.github.com/repos/dcos/dcos/issues/${existing_bump_pr}/comments" > /dev/null
    ghcurl -X POST --data '{"state":"closed"}' "https://api.github.com/repos/dcos/dcos/pulls/${existing_bump_pr}" > /dev/null
fi



printf "\n\n=== Here's your PR ======================================================================\n"
jq -r .html_url ./pr-response.json
