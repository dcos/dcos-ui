#!/usr/bin/env bash

# README
#
# DC/OS UI bump helper script - its bash, its ugly, but it works ¯\_(ツ)_/¯
# Feel free to do it manually ʘ‿ʘ
#
# Usage
# You need to provide a Github Personal Access Token[1] and call the script like this
# GH_USER=you GH_PERSONAL_TOKEN=123445 ./bump.sh <master|1.12|1.11>
#
# [1]
# Github Personal Access Token: https://help.github.com/articles/creating-a-personal-access-token-for-the-command-line/
# Token needs full repo permission (nothing else)

set -e

repo_dcos_dcos="${REPO_DCOS_DCOS:-"https://${GH_USER}:${GH_PERSONAL_TOKEN}@github.com/dcos/dcos.git"}"
repo_mesosphere_dcos="${REPO_MESOSPHERE_DCOS:-"https://${GH_USER}:${GH_PERSONAL_TOKEN}@github.com/mesosphere/dcos.git"}"
repo_dcos_enterprise="${REPO_DCOS_ENTERPRISE:-"https://${GH_USER}:${GH_PERSONAL_TOKEN}@github.com/mesosphere/dcos-enterprise.git"}"
repo_dcos_ui="${REPO_DCOS_UI:-"https://${GH_USER}:${GH_PERSONAL_TOKEN}@github.com/dcos/dcos-ui.git"}"

if [ -z "$1" ] || [ "$1" == "--help" ] || [ "$1" == "-h" ]; then
    echo "Usage Example: GH_PERSONAL_TOKEN=123445 ./bump.sh master"
    echo "You can provide different values for repos with: REPO_DCOS_DCOS, REPO_MESOSPHERE_DCOS, REPO_DCOS_ENTERPRISE, REPO_DCOS_UI"
    exit 0
fi

if [ "$1" == "--version" ]; then
    echo "bump v0.0.1"
    exit 0
fi

target=$1

echo "=== Preparing Workspace ====================================================================="

echo "Working directory: `pwd`"
rm -rf ./tmp && mkdir ./tmp

echo "=== Done."
echo "=== Cloning repositories ===================================================================="

git -C ./tmp clone $repo_dcos_ui

git -C ./tmp clone $repo_dcos_ui_plugins

git -C ./tmp clone $repo_dcos_dcos

git -C ./tmp clone $repo_dcos_enterprise

echo "=== Done."
echo "=== Processing current buildinfo.json (OSS) ================================================="

git -C ./tmp/dcos checkout ${target}
cp ./tmp/dcos/packages/dcos-ui/buildinfo.json ./tmp/current.buildinfo.json

# current is next
oss_current_tag=$(jq .single_source.url ./tmp/current.buildinfo.json | grep -oE "v[0-9]{1,}\.[0-9]{1,}\.[0-9]{1,}")

echo "=== Done."
echo "=== Processing latest buildinfo.json (OSS) =================================================="

git -C ./tmp/dcos remote add mesosphere $repo_mesosphere_dcos
git -C ./tmp/dcos fetch -q mesosphere

git -C ./tmp/dcos checkout mesosphere/dcos-ui/${target}+dcos-ui-latest
cp ./tmp/dcos/packages/dcos-ui/buildinfo.json ./tmp/latest.buildinfo.json

oss_latest_version=$(jq .single_source.url ./tmp/latest.buildinfo.json | grep -oE "v[0-9]{1,}\.[0-9]{1,}\.[0-9]{1,}")

echo "=== Done."
echo "=== Check if bump necessary ================================================================="

if [ "$oss_current_tag" == "$oss_latest_version" ] ; then
    echo "No bump necessary."
    exit 0
else
    echo "Bump necessary."
    echo "current oss version: $oss_current_tag"
    echo "new oss version: $oss_latest_version"
fi

echo "=== Done."
echo "=== Check for open Bump PRs ================================================================="

existing_oss_bump_pr=$(curl -H "Content-Type: application/json" -H "Authorization: token ${GH_PERSONAL_TOKEN}" "https://api.github.com/search/issues?q=repo%3Adcos%2Fdcos+is%3Apr+is%3Aopen+%22%5B${target}%5D+Automated+Bump+DC%2FOS+UI%22+-label%3A%22ship+it%22+author%3A${GH_USER}" | jq .items[0].number)

if [ $existing_oss_bump_pr != "null" ]; then
  echo "Bump PR already open: https://github.com/dcos/dcos/pull/${existing_oss_bump_pr}"
fi

echo "=== Done."
echo "=== Get JIRAs from git log =================================================================="

oss_jira_ids="$(git -C ./tmp/dcos-ui --no-pager log ${target}+${oss_current_tag}...${target}+${oss_latest_version} | grep -oE "(Marathon|DCOS(_OSS)?)-[0-9]{1,6}" || echo "")"

echo "Found these JIRAS:"
echo $oss_jira_ids

echo "=== Done."
echo "=== Prepare OSS bump branch ================================================================="

oss_bump_branch="dcos-ui/bump/$(date +%F-%H-%M-%S)/${target}+${oss_latest_version}"
git -C ./tmp/dcos checkout ${target}
git -C ./tmp/dcos checkout -b ${oss_bump_branch}

cp ./tmp/latest.buildinfo.json ./tmp/dcos/packages/dcos-ui/buildinfo.json
git -C ./tmp/dcos add packages/dcos-ui/buildinfo.json

git -C ./tmp/dcos commit -m "chore: Bump DC/OS UI ${oss_latest_version}"

git -C ./tmp/dcos push --set-upstream mesosphere $oss_bump_branch

echo "=== Done."
echo "=== Create OSS bump PR ======================================================================"

curl https://raw.githubusercontent.com/dcos/dcos/master/PULL_REQUEST_TEMPLATE.md -o ./tmp/PULL_REQUEST_TEMPLATE.md

oss_bump_pr_body="$(cat ./tmp/PULL_REQUEST_TEMPLATE.md | sed -e "s/  - \[DCOS-ID\](https:\/\/jira.mesosphere.com\/browse\/DCOS-<number>) JIRA title \/ short description./$(echo "$oss_jira_ids" | awk '{printf "%s ", $0}')/" | awk '{printf "%s\\n", $0}' )"

echo "{
  \"title\": \"[${target}] Automated Bump DC/OS UI ${oss_latest_version}\",
  \"body\": \"${oss_bump_pr_body}\",
  \"head\": \"mesosphere:${oss_bump_branch}\",
  \"base\": \"${target}\",
  \"maintainer_can_modify\": true
}
" > ./tmp/oss.pr.json

curl -X POST -H "Content-Type: application/json" -H "Authorization: token ${GH_PERSONAL_TOKEN}" --data @./tmp/oss.pr.json "https://api.github.com/repos/dcos/dcos/pulls" > ./tmp/oss.pr-response.json

oss_bump_pr="$(jq .number ./tmp/oss.pr-response.json)"

echo "=== Done."
# echo "=== Waiting for EE bump PR ======================================================================="

# ee_bump_pr=""
# while [ -z "$ee_bump_pr" ]; do
#   echo "Waiting for Mergebot…"
#   sleep 5;
#   ee_bump_pr=$(curl -H "Content-Type: application/json" -H "Authorization: token ${GH_PERSONAL_TOKEN}" https://api.github.com/repos/dcos/dcos/issues/${oss_bump_pr}/comments | jq .[].body | grep "Enterprise Bump PR" | grep -oE "[0-9]{4,5}" || echo "")
# done

# sleep 30; # adding this a safety net if mergebot was too quick…

# echo "=== Done."

echo "=== Adding CHANDES.md Comment ======"

curl -H "Authorization: token ${GH_PERSONAL_TOKEN}" -X POST -d "{\"body\": \"Please update CHANGES.md file (Add or update DC/OS UI line in \`Notable Changes\` section of newest version).\n\`\`\`\n* Updated DC/OS UI to [${target}+${oss_latest_version}](https://github.com/dcos/dcos-ui/releases/tag/${target}+${oss_latest_version}).\n\`\`\`\n\nYou can edit CHANGES.md directly here: https://github.com/mesosphere/dcos/edit/${oss_bump_branch}/CHANGES.md?pr=%2Fdcos%2Fdcos%2Fpull%2F${oss_bump_pr}\"}" "https://api.github.com/repos/dcos/dcos/issues/${oss_bump_pr}/comments"

echo "=== Done."
echo "=== Close old PRs ======"

if [ "$existing_oss_bump_pr" != "null" ]; then
    curl -H "Authorization: token ${GH_PERSONAL_TOKEN}" -X POST -d "{\"body\": \"Superseded by #${oss_bump_pr}\"}" "https://api.github.com/repos/dcos/dcos/issues/${existing_oss_bump_pr}/comments"
    curl -X POST -H "Content-Type: application/json" -H "Authorization: token ${GH_PERSONAL_TOKEN}" --data '{"state":"closed"}' "https://api.github.com/repos/dcos/dcos/pulls/${existing_oss_bump_pr}"
fi

echo "=== Done."
echo "=== Posting to Slack ======"
# Slack integration comes from here: https://gist.github.com/dopiaza/6449505

slack_message="@frontend-team please review these bumps:\n- OSS: [${target}] ${oss_latest_version}: https://github.com/dcos/dcos/pull/${oss_bump_pr}"

escapedText=$(echo $slack_message | sed 's/"/\"/g' | sed "s/'/\'/g" )
json="{\"channel\": \"#frontend\", \"username\":\"DC/OS UI Bump Bot\", \"icon_emoji\":\"ghost\", \"attachments\":[{\"color\":\"danger\" , \"text\": \"$escapedText\"}]}"


# posts to #frontend
# curl -s -d "payload=$json" "https://hooks.slack.com/services/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"

echo "=== Done."
echo "=== Cleaning up ======"

rm -rf ./tmp

echo "=== Done."
