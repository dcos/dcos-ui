#!/bin/bash

set -e
[ -n "${DEBUG}" ] && set -x

# This script is intended to be called by the ci scripts, please dont
# execute it directly.

## Configuration
#####################################################################

# path of this file
SCRIPT_PATH="$(cd $(dirname "$0")/$(dirname "$(readlink "$0")") && pwd)"

# project root for this file
PROJECT_ROOT="$( cd "$( echo ${SCRIPT_PATH} | sed s+/scripts/ci/utils++)" && pwd )"

# these are passed in from calling scripts
PKG_TARGET=${PKG_TARGET:-""}

# git dir to work in
GIT_PATH=${GIT_PATH:-"${PROJECT_ROOT}"}

## Script
#####################################################################


# get tags to get changes between
TAGS=($(git -C "${GIT_PATH}" tag -l --sort=-version:refname | grep "${PKG_TARGET}+v"))
CURRENT_TAG=${TAGS[0]}
PREVIOUS_TAG=${TAGS[1]}

if [[ -z $PREVIOUS_TAG ]]
then
  exit 1
fi

# get commit between given tags
COMMITS=$(git -C "${GIT_PATH}" log $PREVIOUS_TAG..$CURRENT_TAG --pretty=format:"%H")

# build markdown from commit messages
JIRA_PREFIX="(DCOS|DCOS_OSS|MARATHON)"
MARKDOWN=""

for COMMIT in $COMMITS; do

  COMMIT_BODY=$(git -C "${GIT_PATH}" log -1 ${COMMIT})
  COMMIT_BODY_ONELINE=$(echo $COMMIT_BODY)
  COMMIT_COMMENT=$(git -C "${GIT_PATH}" log --format=%B -n 1 ${COMMIT})

  if [[ $COMMIT_BODY_ONELINE =~ Closes\ ${JIRA_PREFIX}-[0-9]* ]]; then
    TASK_NUMBER=$(echo $COMMIT_BODY_ONELINE | grep -Eo "${JIRA_PREFIX}-[0-9]*")
    TASK_DESCRIPTION=$(echo "${COMMIT_COMMENT}" | grep -Eo -m1 ".*:(.*)" | cut -d: -f2)

    MARKDOWN+="[${TASK_NUMBER}](https://jira.mesosphere.com/browse/${TASK_NUMBER}): ${TASK_DESCRIPTION}"
    MARKDOWN+="<br />"
  fi
done

# "return" markdown
echo $MARKDOWN
