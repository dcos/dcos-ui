#!/bin/bash

set -e
[ -n "${DEBUG}" ] && set -x

# This file is intended to run on Jenkins, if you want to run it locally,
# you need to provide some environment variables:
#
# GIT_COMMIT: Commit SHA to work on
# BRANCH_NAME: Branch Name to work on
# git credentials
# aws login credentials
#
# Also make sure to `npm run build` before!
#
# Use this from project root:
# npm run build && tar czf "release.tar.gz" dist && BRANCH_NAME=$(git branch | grep \* | cut -d' ' -f2) GIT_COMMIT=$(git rev-parse HEAD) CREATE_RELEASE=1 PUSH_RELEASE=1 ./scripts/ci/release-version

## Configuration
#####################################################################

SCRIPT_PATH="$(cd $(dirname "$0")/$(dirname "$(readlink "$0")") && pwd)"

PROJECT_ROOT="$( cd "${SCRIPT_PATH}/../../" && pwd )"

CREATE_RELEASE=${CREATE_RELEASE:-0}
PUSH_RELEASE=${PUSH_RELEASE:-0}

# `master`` is fine, but if BRANCH_NAME is `release/1.11` we only want `1.11`
PKG_TARGET=$(echo ${BRANCH_NAME} | sed -E 's/([^/]*)$|./\1/g')
PKG_NAME="dcos-ui"
PKG_VERSION="$(python -c "import sys, json; \
  pkg = json.load(open('$PROJECT_ROOT/package.json')); \
  sys.stdout.write(str(pkg['version']));")"

DCOS_BRANCH="dcos-ui/${PKG_TARGET}/${PKG_NAME}-${PKG_VERSION}"




git fetch
git checkout ${BRANCH_NAME}
npm run release -- --tag-prefix $(echo ${BRANCH_NAME} | sed -E 's/([^/]*)$|./\1/g')+v
git --no-pager log --decorate=short --pretty=oneline -n1
git push --follow-tags https://$GIT_USER:$GIT_PASSWORD@github.com/dcos/dcos-ui ${BRANCH_NAME}


## Create Assets & Generate Upload Data
#####################################################################

PKG_TARGET=${PKG_TARGET} \
  PKG_NAME=${PKG_NAME} \
  PKG_VERSION=${PKG_VERSION} \
  ${SCRIPT_PATH}/utils/upload-build || exit 1

## Update DC/OS Repo & Create Bump PR
#####################################################################

DCOS_BRANCH=${DCOS_BRANCH} \
  PKG_TARGET=${PKG_TARGET} \
  PKG_VERSION=${PKG_VERSION} \
  ${SCRIPT_PATH}/utils/update-dcos-repo || exit 1

DCOS_BRANCH=${DCOS_BRANCH} \
  PKG_TARGET=${PKG_TARGET} \
  PKG_VERSION=${PKG_VERSION} \
  CHANGELOG=$(GIT_DIR=${PROJECT_ROOT} ${SCRIPT_PATH}/utils/generate-changelog)
  ${SCRIPT_PATH}/utils/create-bump-pr || exit 1
