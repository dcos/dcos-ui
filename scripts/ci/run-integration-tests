#!/bin/bash

# This script is a temporary solution to run the integration tests in a <= 1.GB
# memory environment and with support for retries per test file. We should
# replace it with a test runner in the future, please see it more as a proof of
# concept

set -e
shopt -s globstar # to allow ** in globs

PROJECT_ROOT="$( cd "$( dirname "${BASH_SOURCE[0]}" )/../../" && pwd )"
RETRIES=3

function executeCypress {
  echo "=====> Executing cypress for $1"
  local testResultPath
  testResultPath="cypress/$(basename "$1")-result.xml"
  npm run cypress -- -s "$1" --reporter junit --reporter-options "mochaFile=$testResultPath"
}

function runTestFile {
  echo "==> Running tests for $1"
  i="0"
  while [ $i -lt $RETRIES ]; do
    i=$((i+1))
    echo "===> Executing run $i"
    local exit_code

    # We don't want to let an error in the block below to end the entire script
    set +e # undo instant error flag

    executeCypress "$1"
    exit_code=$?

    set -e # redo flag
    echo "==> $i run exit code: $exit_code"

    if [ $exit_code -eq 0 ]; then
      return 0
    fi
  done

  echo "==> Couldn't get a success in $RETRIES retries"
  exit 1
}

echo "starting http-server proxy used by cypress"
http-server -p 4200 dist&
SERVER_PID=$!


for f in $PROJECT_ROOT/tests/**/*-cy.js; do
  runTestFile "$f"
done

echo "Done running tests, merging the results now"
junit-merge ./cypress/**/*-result.xml --out ./cypress/results.xml


echo "kill server"
kill $SERVER_PID
