#!/bin/bash

set -e
[ -n "${DEBUG}" ] && set -x

# This file is intended to run on Jenkins, if you want to create a
# release locally, just run
# 1. npm run release
# followed by
# 2. git push --follow-tags ${BRANCH_NAME}

## Configuration
#####################################################################

# path of this file
SCRIPT_PATH="$(cd $(dirname "$0")/$(dirname "$(readlink "$0")") && pwd)"

# project root for this file
PROJECT_ROOT="$( cd "$( echo ${SCRIPT_PATH} | sed s+/scripts/ci++)" && pwd )"

# really create a release? (prevents accedential calling)
CREATE_RELEASE=${CREATE_RELEASE:-0}

# really push release? (prevents accedential calling)
PUSH_RELEASE=${PUSH_RELEASE:-0}

# get correct DC/OS target (=base branch!) from .dcosrc file
PKG_TARGET=$(python -c "import sys, json; \
  dcosrc = json.load(open('$PROJECT_ROOT/.dcosrc')); \
  sys.stdout.write(str(dcosrc['base']));")

## Create Release and Push it
#####################################################################

# create relase with correct version number: PKG_TARGET+v<SEMVER>
if [ ${CREATE_RELEASE} -eq 0 ]; then
  echo "No release, no Bump!"
  exit 1
fi
npm run release

# push new release to branch, this pushes to the corresponsing release "master"!
if [ ${PUSH_RELEASE} -eq 0 ]; then
  echo "No push, no Bump!"
  exit 1
fi
# this command should fail if something has changed on the branch in the meantime, canceling this release.
git push --follow-tags https://$GIT_USER:$GIT_PASSWORD@github.com/dcos/dcos-ui ${BRANCH_NAME}
