#!/bin/bash
set -e
# path of this file
SCRIPT_PATH=$(cd `dirname $0` && pwd)

# This script is a temporary solution to run the integration tests in a <= 1.GB
# memory environment and with support for retries per test file. We should
# replace it with a test runner in the future, please see it more as a proof of
# concept

## Configuration
#####################################################################

# Search string passed to `find`
# Values: String
SEARCH=${1:-'*'}

PROXY_PORT=${PROXY_PORT:-4200}
PROXY_PID=0

# make sure we run in the testing configuration
NODE_ENV="testing"

PROJECT_ROOT=$(cd "$SCRIPT_PATH/../" && pwd)
TESTS_FOLDER=${TESTS_FOLDER:-"system-tests"}

# System test related Variables
TEST_UUID="${TEST_UUID:-system-tests-$(date +%s)}"
CYPRESS_CONFIG_FILE=cypress.system-tests.json

if [ -z "$CLUSTER_URL" ]; then echo "We need to have a cluster to run the system tests against"; exit 1; fi
if [ -z "$(which dcos)" ]; then echo "DC/OS CLI needs to be installed and setup, aborting"; exit 1; fi

source "$SCRIPT_PATH/utils/tests-functions"

# it takes a while until marathon actually responds after cluster started :(
echo "Waiting for Marathon to be up and runningâ€¦"
until $(curl -s -k --output /dev/null -H "Cookie: dcos-acs-auth-cookie=${CLUSTER_AUTH_TOKEN};" --silent --head --fail ${CLUSTER_URL}/service/marathon/ping); do
  sleep 5
done
echo "Successfull pinged Marathon."

setup
trap teardown EXIT
run_tests
